---
name: Containerfile Lint

on:
  push:
    branches:
      - "main"
    paths:
      # - "/.devcontainer/Containerfile"
      # - "/workflows/.devcontainer/Containerfile.*"
      # - "Containerfile"
      # - "Dockerfile.*"
      - "Dockerfile"
      - "Dockerfile.test"
      - ".github/workflows/Dockerfile1.test"
  pull_request:
    branches:
      - "main"
    paths:
      # - ".devcontainer/Containerfile"
      # - ".devcontainer/Containerfile.*"
      # - "/.devcontainer/Containerfile*"
      # - "/workflows/.devcontainer/Containerfile.*"
      # - "Containerfile"
      # - "Dockerfile.*"
      - "Dockerfile"
      - "Dockerfile.test"
      - ".github/workflows/Dockerfile1.test"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  skip-duplicate-actions:
    name: Skip Duplicate Actions
    runs-on: ubuntu-latest
    steps:
      - uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          cancel_others: true
          concurrent_skipping: never

  lint:
    name: Hadolint Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: Dockerfile.test

  # scan:
  #   needs: lint
  #   name: Scan config files for vulnerabilities
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker.io/aquasec/trivy:latest
  #     volumes:
  #       - "${{ github.workspace }}:/volume"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Trivy vulnerability scanner in IaC mode
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         format: "table"
  #         ignore-unfixed: true
  #         scan-type: "config"
  #         severity: "CRITICAL,HIGH"
  #         skip-files: "Containerfile,.devcontainer/Containerfile,.devcontainer/Containerfile.*"
  #         trivyignores: ".trivyignore"
  # - name: Scan config Containerfiles for vulnerabilities
  #   run: |
  #     trivy config --exit-code 0 --skip-files "Dockerfile.test" --severity HIGH --file-patterns "dockerfile:Containerfile" /volume

  # - name: Issue create
  #   # shell: bash
  #   run: |
  #     echo "Hello World!"
  #     # gh --repo "$GITHUB_REPOSITORY" issue list

  # issue:
  #   name: Issue create
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Issue create
  #       run: |
  #         body=$(
  #           cat << EOF | envsubst
  #         ${{ github.event.pull_request.number }}
  #         EOF
  #         )
  #         gh issue create --title "vulnerabilities" --body "#$body" --label "vulnerability"
  #         echo "PR number = ${{ github.event.pull_request.number }}"
  #       shell: bash
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # issue_list:
  #   name: Issue list
  #   runs-on: ubuntu-latest
  #   needs: scan
  #   if: ${{ failure() }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Hello
  #       run: |
  #         echo "Hello World!"

  # - name: Issue list
  #   uses: actions/github-script@v6
  #   with:
  #     script: |
  #       # const result = github.rest.issues.listForRepo({
  #       #   owner: context.repo.owner,
  #       #   repo: context.repo.repo,
  #       # });
  #       # console.log(result)
  #       const execa = require('execa')
  #       const { stdout } = await execa('echo', ['hello', 'world'])
  #       console.log(stdout)

  # - name: Issue list2
  #   uses: actions/github-script@v6
  #   with:
  #     script: |
  #       github.rest.issues.create({
  #       owner: context.repo.owner,
  #       repo: context.repo.repo,
  #       title: "vulnerability",
  #       });
  #       const result = github.rest.issues.listForRepo({
  #       owner: context.repo.owner,
  #       repo: context.repo.repo,
  #       });
  #       console.log(result)
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # trivy:
  #   name: Trivy vulnerability scanner
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         scan-type: "config"
  #         hide-progress: false
  #         format: "table"
  #         # exit-code: "1"
  #         # ignore-unfixed: true
  #         severity: "CRITICAL,HIGH"
